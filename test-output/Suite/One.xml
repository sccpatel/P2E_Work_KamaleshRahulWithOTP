<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Computer" failures="0" tests="7" name="One" time="0.502" errors="0" timestamp="2025-02-10T13:42:49 IST">
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.008">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentReports.createTest(String)&amp;quot; because &amp;quot;this.extent&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentReports.createTest(String)" because "this.extent" is null
at com.p2e.Base.BaseTest.beforeMethod(BaseTest.java:40)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.p2e.Base.BaseTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="otpBalanace" time="0.015">
    <skipped/>
  </testcase> <!-- otpBalanace -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerFirst" time="0.001">
    <skipped/>
  </testcase> <!-- runnerFirst -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerFive" time="0.0">
    <skipped/>
  </testcase> <!-- runnerFive -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerFour" time="0.0">
    <skipped/>
  </testcase> <!-- runnerFour -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerSecond" time="0.0">
    <skipped/>
  </testcase> <!-- runnerSecond -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerSix" time="0.0">
    <skipped/>
  </testcase> <!-- runnerSix -->
  <testcase classname="com.p2e.Runner.P2E_FirstClass" name="runnerThird" time="0.0">
    <skipped/>
  </testcase> <!-- runnerThird -->
</testsuite> <!-- One -->
